openapi: 3.0.3
info:
  title: Team 315 - Odoo x Paradox Hackathon API
  description: |
    API Endpoints for the Team 315 Hackathon Application | SynergySphere - Advanced Team Collaboration Platform.

    Team Members:
      1. Vibhore Agrawal
      2. Kartikey Singh
      3. Puneet
      4. Rajarshi Roy
  version: "1.0.0"

servers:
  - url: "https://team-315-odoo-hackathon.onrender.com"
  - url: "http://localhost:5000"

tags:
  - name: Authentication
    description: Endpoints for user registration and login.
  - name: Projects
    description: Endpoints to manage projects.
  - name: Teams
    description: Endpoints to manage teams and team members.
  - name: Tasks
    description: Endpoints to manage tasks within projects.

paths:
  /api/register:
    post:
      tags:
        - Authentication
      summary: Register a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - name
                - password
              properties:
                email:
                  type: string
                name:
                  type: string
                password:
                  type: string
      responses:
        "201":
          description: User created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "409":
          description: User already exists.
        "500":
          description: Internal server error.

  /api/login:
    post:
      tags:
        - Authentication
      summary: Login an existing user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Invalid credentials.

  /api/projects:
    get:
      tags:
        - Projects
      summary: Get all projects.
      responses:
        "200":
          description: List of projects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
    post:
      tags:
        - Projects
      summary: Create a new project.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - team_id
              properties:
                name:
                  type: string
                description:
                  type: string
                team_id:
                  type: integer
      responses:
        "201":
          description: Project created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "500":
          description: Internal server error.

  /api/projects/{project_id}:
    parameters:
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
    get:
      tags:
        - Projects
      summary: Get a project by ID.
      responses:
        "200":
          description: Project details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "404":
          description: Project not found.
    put:
      tags:
        - Projects
      summary: Update a project.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                team_id:
                  type: integer
      responses:
        "200":
          description: Project updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "404":
          description: Project not found.
    delete:
      tags:
        - Projects
      summary: Delete a project.
      responses:
        "200":
          description: Project deleted successfully.
        "404":
          description: Project not found.

  /api/teams:
    get:
      tags:
        - Teams
      summary: Get all teams.
      responses:
        "200":
          description: List of teams.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
    post:
      tags:
        - Teams
      summary: Create a new team.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - leader_id
              properties:
                name:
                  type: string
                leader_id:
                  type: integer
      responses:
        "201":
          description: Team created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "500":
          description: Internal server error.

  /api/teams/{team_id}:
    parameters:
      - in: path
        name: team_id
        schema:
          type: integer
        required: true
    get:
      tags:
        - Teams
      summary: Get team details.
      responses:
        "200":
          description: Team details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          description: Team not found.

  /api/teams/{team_id}/members:
    post:
      tags:
        - Teams
      summary: Add a member to a team.
      parameters:
        - in: path
          name: team_id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: integer
      responses:
        "200":
          description: Member added successfully.
        "400":
          description: Missing or duplicate member.
        "404":
          description: Team or User not found.
        "500":
          description: Internal server error.

  /api/teams/{team_id}/members/{user_id}:
    delete:
      tags:
        - Teams
      summary: Remove a member from a team.
      parameters:
        - in: path
          name: team_id
          schema:
            type: integer
          required: true
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: Member removed successfully.
        "400":
          description: User not a member or cannot remove leader.
        "404":
          description: Team or User not found.
        "500":
          description: Internal server error.

  /api/projects/{project_id}/tasks:
    parameters:
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
    get:
      tags:
        - Tasks
      summary: Get all tasks for a project.
      responses:
        "200":
          description: List of tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
        "400":
          description: Project ID required.
    post:
      tags:
        - Tasks
      summary: Create a new task in a project.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - project_id
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
                  enum: [TO-DO, IN_PROGRESS, DONE]
                due_date:
                  type: string
                  format: date-time
                assignee_id:
                  type: integer
      responses:
        "201":
          description: Task created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "500":
          description: Internal server error.

  /api/tasks/{task_id}:
    parameters:
      - in: path
        name: task_id
        schema:
          type: integer
        required: true
    get:
      tags:
        - Tasks
      summary: Get a task by ID.
      responses:
        "200":
          description: Task details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Task not found.
    put:
      tags:
        - Tasks
      summary: Update a task.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
                  enum: [TO-DO, IN_PROGRESS, DONE]
                due_date:
                  type: string
                  format: date-time
                assignee_id:
                  type: integer
      responses:
        "200":
          description: Task updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Task not found.
    delete:
      tags:
        - Tasks
      summary: Delete a task.
      responses:
        "200":
          description: Task deleted successfully.
        "404":
          description: Task not found.

components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        team_id:
          type: integer
    Team:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        leader_id:
          type: integer
        members:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              email:
                type: string
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [TO-DO, IN_PROGRESS, DONE]
        due_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        project_id:
          type: integer
        assignee_id:
          type: integer
